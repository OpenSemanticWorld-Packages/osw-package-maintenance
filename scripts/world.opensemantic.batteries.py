from pathlib import Path

from reusable import WorldCreat, WorldMeta

# Provide information on the page package to be created
package_meta_data = WorldMeta(
    # Package name
    name="OSW Batteries",
    # Package repository name - usually the GitHub repository name
    repo="world.opensemantic.batteries",
    # Package ID - usually the same as repo
    id="world.opensemantic.batteries",
    # Package subdirectory - usually resembling parts of the package name
    subdir="batteries",
    # Package branch - usually "main"
    branch="main",
    # Provide a package description
    description=(
        "Provides battery specific items like ElectrochemicalTest, BatteryCell, etc."
    ),
    # Specify the package version - use semantic versioning
    version="1.0.0",
    # Specify the required PagePackages
    requiredPackages=["world.opensemantic.base", "world.opensemantic.lab"],
    # Author(s)
    author=["Simon Stier", "Lukas Gold"],
    # List the full page titles of the pages to be included in the package
    # You can include a comment in the same line, stating the page label
    page_titles=[
        # This file is auto-generated by gather_categories.py
        # BatteryCellMaterial , subcategories and meta categories
        "Category:OSWc02165dc24544a10a2046b54506dedac",  # BatteryCellMaterial
        "Category:OSWd5791d13ae43423ebb97ceb942c62d10",  # ActiveMaterial
        "Category:OSWb552ab09225141b7a0de7c15176d152e",  # BatteryElectrodeMaterial
        "Category:OSW3ba81be2e4f948a9a758b6d18cfd643c",  # BatteryElectrolyteMaterial
        "Category:OSW1a9524bf22384a9ebd7fed4b9b29e116",  # Binder
        "Category:OSWb869e525b25a4a9d8880a30075eb7d21",  # ConductiveAdditive
        "Category:OSWa1a377f297f54ecabe558b46fb43ad02",  # CurrentCollector
        "Category:OSW97c67a6938cd401a8eadcc03bbce9ef1",  # Electrode
        "Category:OSW458c6a07945c4d7fa9ae1314260fcc58",  # Electrolyte
        "Category:OSW6fbd31cf89ad4ce3b5818a6fd1f2bd13",  # Separator
        "Category:OSW2cfa957f5e824cf38da52d547cebe73d",  # Graphite
        "Category:OSWdc59f9c4b99a415e96da5388b6b350e5",  # GraphiteSiliconComposite
        "Category:OSW36082c03d48543aca08bfe4ea3afe8cb",  # LithiumIronPhosphate
        "Category:OSW54f5810625574f23ba20936ecad99f7e",  # LithiumNickelManganeseOxide
        "Category:OSW1cee2d62621f4d2f8477e9b336fa3262",  # LithiumNickelOxide
        "Category:OSW958399941fa64440bac1c0b7b572e57a",  # LithiumTitanate
        "Category:OSW70b37e4e6d014343a00ba532edce45f1",  # LithiumCobaltOxide
        "Category:OSW46efd6e0ad714dd8a2cf6d5e7131d8ae",  # LithiumManganeseOxide
        "Category:OSWd82bda461d474a5dbf274c8bd6f1cfcd",  # Lithium
        "Category:OSW863e89704c0243a68749f747eaa9f3b6",  # LithiumNickelCobaltAluminiumOxide
        "Category:OSW670c84f7f7e64533a37081e6349bb008",  # LithiumNickelManganeseCobaltOxide
        "Category:OSW1ee1f5ccdb564f4e829b76b76028aa77",  # NegativeActiveMaterial
        "Category:OSW6110d42bba33448b9a6348a3cd28b921",  # PositiveActiveMaterial
        "Category:OSW39eb4428d105496bb4fd64e276b80cff",  # Silicon
        "Category:OSWb1428c1d948849eaa7bb50543a140a27",  # NMC111
        "Category:OSW822ee41305984fda91de275886fb1014",  # NMC532
        "Category:OSWd0bea08c395c4ba4a269abbb994cb0b5",  # NMC622
        "Category:OSW418d1402b35e4e099dd02a52a782bd47",  # NMC811
        "Category:OSWcca87d66c75049769501ab5cbc8c2ec9",  # ElectrolyteAdditive
        "Category:OSWfe8c9892fed6435586d9030886652151",  # CarboxymethylCellulose
        "Category:OSW0d44aad3c1d3467e82b483f27d814aad",  # PolyvinylideneFluoride
        "Category:OSWb09db7a4bd8a404684e9223d75fb3537",  # StyreneButadiene
        "Category:OSW006c2239c71d486a8c3cd8753abefe97",  # GraphiteElectrode
        "Category:OSW89eb5866064442f7a63be78928c6011c",  # SiliconGraphiteElectrode
        "Category:OSW709911dd6f9f428e8d8b99efdabd705e",  # LithiumNickelManganeseOxideElectrode
        "Category:OSWe1bf39fa4eb148a3902dd3b62a8705a7",  # LnoElectrode
        "Category:OSW16063818b7a74790adc62bca92c1c441",  # LithiumTitanateElectrode
        "Category:OSW00e9d1e1182e44b9b83d011fc8701d18",  # LithiumCobaltOxideElectrode
        "Category:OSW6dbd9ac54d234e058deef9a239bd8633",  # LithiumIronPhosphateElectrode
        "Category:OSWfa1c14b35c2f49f4bee404bc8fba667e",  # LithiumManganeseOxideElectrode
        "Category:OSW4dc7495a902941cbad3b40c79ddb9a88",  # LithiumElectrode
        "Category:OSW5506facd3ce54d62b19359fd8c98ee44",  # LithiumNickelCobaltAluminumOxideElectrode
        "Category:OSW7024409a760948c6a104753d90e43c39",  # LithiumNickelManganeseCobaltOxideElectrode
        "Category:OSWe38172164e4c423f9b56385bc9cd0a3c",  # NegativeElectrode
        "Category:OSW95f2c45c7e0142e7a1b558d2a84b686f",  # PositiveElectrode
        "Category:OSW70b0b8867cb043e6b08592b2ca0f891b",  # SiliconBasedElectrode
        "Category:OSW7b457ac598404be98e672964808c44c3",  # Nmc111Electrode
        "Category:OSW36950be2111e42bf99dda148c2b4aded",  # Ncm532Electrode
        "Category:OSWbdc9f7996dfc4e518f468e1ed01a570c",  # Nmc622Electrode
        "Category:OSW5c1c253b8f0e40a69183fb4dcfc4a90e",  # Nmc811Electrode
        "Category:OSWdd31fe7aeeee4565a7c16254b9948874",  # BatteryElectrodeType
        # AnalyticalLaboratoryProcess , subcategories and meta categories
        "Category:OSWfa914762adaa4665a63b6a77c3ea6eed",  # AnalyticalLaboratoryProcess
        "Category:OSW6f39d77241e24a33ab6d036dfac03ace",  # ElectrochemicalTest
        "Category:OSW9d5fc755409c433b822cf5c8feecdb32",  # MechanischerTest
        "Category:OSW47c67760dd164c82b570f58c8269b373",  # PostMortemExperiment
        "Category:OSWafda1f2328804e3a89bf90f8af9c5527",  # BatteryCellOpening
        "Category:OSW6cc7d1cc87dc4fa8935d5b3d2a9b55c5",  # AnalyticalLabProcessType
        # ElectrochemicalTestingDevice , subcategories and meta categories
        "Category:OSW69729530f3ca4addaf8dd95ea3781607",  # ElectrochemicalTestingDevice
        "Category:OSWf036fa2541c54bd4bc4095167b4af60c",  # BatteryCycler
        "Category:OSWef181c1daf2343fd8c132c39e7d748bd",  # MaccorBatteryTester
        "Category:OSWd5b87e52a61349dbb6077bf2447a7bf4",  # MaccorSeries4000
        "Item:OSWd8351c3e8e1641c582a5ac5bd0281f9a",  # Maccor Inc.
        # ElectrochemicalTestProcedure , subcategories and meta categories
        "Category:OSWdda41d4a4ec0421babe0295c6edcb5df",  # ElectrochemicalTestProcedure
        "Category:OSW62c4399f8a3d483f90eb0f4ee4bf3b2c",  # BatteryTestProcedure
        "Category:OSW18f3251c2562407ea7bd7b19791b76f0",  # BioLogicTestProcedure
        "Category:OSWd4bff0a542404ed5b70fcd79e4815b2b",  # CyclingTestProcedure
        "Category:OSW8cb1fd1ec61449df88299dc5a8687020",  # EisTestProcedure
        "Category:OSWbdb8b449342e4090b44b4f80c5ae9d92",  # MaccorTestProcedure
        "Category:OSWac2e87a41f2841e680e0888f72c84fe1",  # BatteryStatePreparationTestProcedure
        "Category:OSW1b877eab05e442999835f2f595d1d1e7",  # AgingTestProcedure
        "Category:OSW36859670e16d44b681488172bc4b0287",  # FormationTestProcedure
        "Category:OSW57ce157016b649a3b3d4f660e0a05b09",  # ReferencePerformanceTestProcedure
        "Category:OSW926ceee7f80148b5b906514ffd4a0e7b",  # GEISTestProcedure
        "Category:OSW4b9c185712e8420883ae5cdc1b1bd55a",  # PEISTestProcedure
        # ElectrochemicalEnergyStorageDevice , subcategories and meta categories
        "Category:OSWbeaf0d4e4dfd4fe29b7349751b3bccba",  # ElectrochemicalEnergyStorageDevice
        "Category:OSW90ff02fb27dc4a1ca0c09c8ddc739589",  # BatteryModule
        "Category:OSW531dd85d3f8e46d5817a2c628dd0b346",  # BatteryPack
        "Category:OSW4744375e811943b2a21e922cded383fc",  # ElectrochemicalCell
        "Category:OSW59e55b5ffb654d4ba24c5d2c0bb755e4",  # BatteryModuleWithSensors
        "Category:OSW680453b7563749a0a33f6be16036c81d",  # BatteryCell
        "Category:OSW8c6de716ad66479a9b8bd6f786f6df6e",  # BatteryCellType
        # BatteryCellFormat and all subcategories and instances
        "Category:OSWf04e73d3c3cb4e4ea7033066e472e9ff",  # BatteryCellFormat
        "Category:OSWfdebd62ed005495f915cd43aaced30c8",  # CoinCellFormat
        "Category:OSWe2837f8ca1884f6595a664f19fd7bf22",  # CylindricalCellFormat
        "Category:OSW7a05349cdec843309927991d1163e5fd",  # PouchCellFormat
        "Category:OSW204337a832bf43c495905b3958e17223",  # PrismaticCellFormat
        "Category:OSW02900397076740c3be51e5e190934d16",  # SwagelockCellFormat
        "Category:OSW3892aac6eaa14005968ac59299314e38",  # BatteryCellFormatType
        "Item:OSWcf36b4d3b48444dfa508d36275b8ee1e",  # CR2016
        "Item:OSW447f2a13f55149088ca1ea9ab2060332",  # CR2032
        "Item:OSWf0ccb7faa2324abfb96a5cbb24d72a33",  # CR2040
        "Item:OSW315bf2e58ced496fa31acbf6a2940e52",  # 18650
        "Item:OSW2280c83d9c704edba689da242e9076d5",  # 21700
        "Item:OSW8da1aee5ded04434be9d8aa483d9996f",  # 4680
        # BatteryCellFormFactor and all subcategories and instances
        "Category:OSWc8108cfc369241aba154c4c306497c30",  # BatteryCellFormFactor
        "Item:OSW630dae487c4949d885402cffcfe1e15b",  # CoinCellFormFactor
        "Item:OSW2ae373c13ee64412b2ed92cadc04a623",  # CylindricalCellFormFactor
        "Item:OSW2f87bcee578345458e6d7067853a5b34",  # PouchCellFormFactor
        "Item:OSW70207c817f7440fc947b2debc9f62fc9",  # PrismaticCellFormFactor
        "Item:OSW7f80aa41e59547b69dbe612c1d3d3833",  # SwagelockCellFormFactor
        # BatteryChemistry and all subcategories and instances
        "Category:OSW6664fe59c92e40d4a75340335ad44d6f",  # BatteryChemistry
        "Item:OSW9e0c501348494b9eaee6db2cd255d773",  # LeadAcid
        "Item:OSWdc36b5ed21cf41bc84577f0a12460a5f",  # LithiumIon
        "Item:OSW85a6474fad594a2daa99f62ee734e973",  # SodiumIon
    ],
)
# Provide the information needed (only) to create the page package
package_creation_config = WorldCreat(
    # Specify the path to the working directory - where the package is stored on disk
    working_dir=Path(__file__).parents[1]
    / "packages"
    / package_meta_data.repo,
)

if __name__ == "__main__":
    # Create the page package
    package_meta_data.create(
        creation_config=package_creation_config,
    )
    # Check if all required pages are present
    package_meta_data.check_required_pages(
        params=WorldMeta.CheckRequiredPagesParams(
            creation_config=package_creation_config,
            # Enable the following line to use the package creation script for the
            #  check of listed pages in the requiredPackages instead of the
            #  package.json (which is only up-to-date after the execution of the
            #  package creation script)
            read_listed_pages_from_script=True,
            script_dir=Path(__file__).parent,
        )
    )
